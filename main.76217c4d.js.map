{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","addEventListener","eventListener","nodeName","id","removeEventListener","printMessage","message","messageDiv","document","createElement","className","textContent","body","appendChild","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAACC,GAOlBH,EAAQI,iBAAiBH,EANH,SAAhBI,IACJF,EAAkBF,UAAAA,OAAAA,EAA6BD,qBAAAA,OAAAA,EAAQM,SACjDN,iBAAAA,OAAAA,EAAQO,GADd,MAEAP,EAAQQ,oBAAoBP,EAAWI,OAO7C,IAAMI,EAAe,SAACC,GACdC,IAAAA,EAAaC,SAASC,cAAc,OAE1CF,EAAWG,UAAY,UACvBH,EAAWI,YAAcL,EACzBE,SAASI,KAAKC,YAAYN,IAG5BO,OAAOC,QAAU,CACfpB,QAAAA,EACAU,aAAAA","file":"main.76217c4d.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  return new Promise((resolve) => {\n    const eventListener = () => {\n      resolve(`It was ${eventName} on the element: ${element.nodeName},\n      id: ${element.id}.`);\n      element.removeEventListener(eventName, eventListener);\n    };\n\n    element.addEventListener(eventName, eventListener);\n  });\n}\n\nconst printMessage = (message) => {\n  const messageDiv = document.createElement('div');\n\n  messageDiv.className = 'message';\n  messageDiv.textContent = message;\n  document.body.appendChild(messageDiv);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}